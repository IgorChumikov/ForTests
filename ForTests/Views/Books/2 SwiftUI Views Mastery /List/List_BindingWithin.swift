//
//  List_BindingWithin.swift
//  ForTests
//
//  Created by –ò–≥–æ—Ä—å –ß—É–º–∏–∫–æ–≤ on 10.10.2025.
//

// IOS 15
// –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä List($items) ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ —Ä–∞–±–æ—Ç—ã —Å List, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –≤ —Å–ø–∏—Å–∫–µ, –±–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö ViewModel –∏ –±–µ–∑ —Ä—É—á–Ω–æ–≥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∞ –∏–Ω–¥–µ–∫—Å–æ–≤.

import SwiftUI

// MARK: - –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö
struct ToDoItem: Identifiable {
    let id = UUID()
    var task = ""
    var priority = false
    var done = false
}

// MARK: - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
struct List_BindingWithin: View {
    @State private var items = [
        ToDoItem(task: "Get milk", done: false),
        ToDoItem(task: "Wash car", done: true),
        ToDoItem(task: "Cut grass", done: false)
    ]
    
    var body: some View {
        VStack(spacing: 20) {
            HeaderViewBinding(
                title: "List",
                subtitle: "Binding Within",
                desc: "You can now bind list data directly to controls in list rows."
            )
            
            // üìã –ù–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å: List —Å –±–∏–Ω–¥–∏–Ω–≥–æ–º
            List($items) { $item in
                HStack {
                    TextField("Task", text: $item.task)
                        .textFieldStyle(.roundedBorder)
                    
                    Toggle("Done?", isOn: $item.done)
                        .labelsHidden()
                }
            }
        }
        .font(.title3)
        .padding()
    }
}

// MARK: - –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π HeaderView
struct HeaderViewBinding: View {
    let title: String
    let subtitle: String
    let desc: String
    var back: Color = .green
    var textColor: Color = .black
    
    var body: some View {
        VStack(spacing: 8) {
            Text(title)
                .font(.largeTitle).bold()
            Text(subtitle)
                .font(.headline)
                .foregroundStyle(.secondary)
            Text(desc)
                .font(.body)
                .multilineTextAlignment(.center)
                .foregroundColor(textColor.opacity(0.7))
        }
        .padding()
        .frame(maxWidth: .infinity)
        .background(back.opacity(0.15))
        .clipShape(RoundedRectangle(cornerRadius: 16))
    }
}

#Preview {
    List_BindingWithin()
}
